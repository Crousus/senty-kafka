version: "4"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.0
    hostname: zookeeper
    container_name: zookeeper
    networks:
      - senty
    ports:
      - "32181:32181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-enterprise-kafka:6.0.0
    hostname: kafka
    container_name: kafka
    networks:
      - senty
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:32181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    working_dir: /data
    volumes:
      - ./data:/data

  kafka-create-topics:
    image: confluentinc/cp-enterprise-kafka:6.0.0
    depends_on:
      - kafka
    networks:
      - senty
    hostname: kafka-create-topics
    command: ["bash", "./create-topics.sh"]
    working_dir: /scripts
    volumes:
      - ../scripts:/scripts


  mongodb:
    image: mongo
    container_name: mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 8nP7s0a    # Can not be changed again later on
    volumes:
      - database:/data/db
    networks:
      - senty

  dbadmin:
    image: mongo-express
    container_name: dbadmin
    restart: unless-stopped
    ports:
      - "8089:8081"
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: admin    # Access to web interface: username
      ME_CONFIG_BASICAUTH_PASSWORD: admin   # Access to web interface: password
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: 8nP7s0a  # must correspond to the db
      ME_CONFIG_MONGODB_PORT: 27017 # Default 27017
      ME_CONFIG_MONGODB_SERVER: mongodb
    networks:
      - senty


  libretranslate:
    container_name: libretranslate
    image: libretranslate/libretranslate
    restart: unless-stopped
    ports:
      - "5002:5000"
    networks:
      - senty


  sentiment-classifier:
    container_name: sentiment-classifier
    image: codait/max-text-sentiment-classifier
    restart: unless-stopped
    ports:
      - "5000:5000"
    networks:
      - senty


  language-classifier:
    build:
      context: ../language-classifier
      dockerfile: Dockerfile
    container_name: language-classifier
    ports:
      - "2000:2000"
    volumes:
      - ../language-classifier:/app

    networks:
      - senty


  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    networks:
      - senty
    environment:
      - BASE_URL_SCRAPER=http://scraper:7001
      - BASE_URL_STREAM=http://comment-processor:7002


  scraper:
    build:
      context: ../scraper-youtube
      dockerfile: Dockerfile
    container_name: scraper
    networks:
      - senty
    depends_on:
      - kafka
    ports:
      - "7001:7001"
    environment:
      - API-KEY=AIzaSyA2DbBX746709VDuBfiSJkGouIE_DHilbg


  comment-processor:
    build:
      context: ../comments-processor
      dockerfile: Dockerfile
    container_name: comment-processor
    networks:
      - senty
    depends_on:
      - kafka
    ports:
      - "7002:7002"

  #
  # Begin of Camunda Orchestrator Services
  #

  payment:
    build:
      context: ../payment-camunda
      dockerfile: Dockerfile
    container_name: payment
    networks:
      - senty
    ports:
      - "8100:8100"
    depends_on:
      - kafka


  registration:
    build:
      context: ../registration
      dockerfile: Dockerfile
    container_name: registration
    networks:
      - senty
    ports:
      - "8096:8096"
    depends_on:
      - kafka


  email:
    build:
      context: ../email-notifier
      dockerfile: Dockerfile
    container_name: email
    networks:
      - senty
    ports:
      - "8099:8099"
    depends_on:
      - kafka


  project-manager:
    build:
      context: ../project-manager-camunda
      dockerfile: Dockerfile
    container_name: project-manager
    networks:
      - senty
    ports:
      - "8093:8093"
    depends_on:
      - kafka


  checkout:
    build:
      context: ../checkout
      dockerfile: Dockerfile
    container_name: checkout
    networks:
      - senty
    ports:
      - "8091:8091"
    depends_on:
      - mongodb
      - kafka


  monitor:
    build:
      context: ../monitor
      dockerfile: Dockerfile
    container_name: monitor
    networks:
      - senty
    depends_on:
      - kafka
    ports:
      - "8095:8095"


networks:
  senty:
    driver: bridge

volumes:
  database:
